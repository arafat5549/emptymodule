<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- 空的module工程 -->
    <groupId>com.skymoe</groupId>
    <artifactId>EmptyModule-parent</artifactId>
    <version>0.0.1-RELEASE</version>
    <packaging>pom</packaging> <!-- 有这个代表了进行模块化，可以为这个工程添加MavenModule -->

    <name>EmptyModule-parent</name>
    <url>http://maven.apache.org</url>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <spring.version>4.1.3.RELEASE</spring.version>
        <jackson.version>2.8.8</jackson.version>
        <gson.version>2.8.0</gson.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <javax.servlet.version>3.0.1</javax.servlet.version>
        <mysql-connector-java.version>5.1.38</mysql-connector-java.version>

        <netty.version>4.0.32.Final</netty.version>
        <guava.version>18.0</guava.version>

        <log4j.version>1.2.14</log4j.version>
        <slf4j.version>1.7.7</slf4j.version>
        <javassist.version> 3.20.0-GA</javassist.version>

    </properties>

    <!-- dependencyManagement元素既能够让子模块继承到父模块的依赖配置，又能保证子模块的灵活配置，在dependencyManagement下的依赖声明不会引入实际的依赖，但是能够约束dependencies下的依赖 -->
    <!-- 在父模块中如下声明之后，子模块的dependency依赖声明就可以直接只声明groupId artifactId 这两个部分就可以使用 -->
    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring框架WEB部分
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!-- 序列化 -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!--
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
             -->

            <!-- WEB包
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            -->
            <!-- 数据库连接包 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- 日记 -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 反射 -->
            <dependency>
                <groupId>org.javassist</groupId>
                 <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <modules>
        <!-- 基础模块-代码自动生成和通用工具类
        <module>empty-common</module>-->
        <!-- netty轻量级HTTP服务器 -->
        <module>empty-lighthttp</module>
        <!-- web工程 -->
        <module>empty-web</module>

    </modules>

    <!-- 提供pluginManagement 帮助管理插件 -->
    <!-- 父模块定义了plugin ,子模块如果想引入这个插件，如下声明即可，它同时又继承了父模块的配 -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.3</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- 发布插件 -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <resources>
            <!-- Intellij idea兼容 -->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <!-- 过滤替换配置文件变量 -->
                <filtering>true</filtering>
            </resource>

            <!-- 环境配置文件
            <resource>
                <directory>deploy/${env}</directory>
            </resource>
             -->
        </resources>
    </build>

</project>